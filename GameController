using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class GameController : MonoBehaviour
{
    public Player[] Players = new Player[2];

    public int CurrentPlayerIdx = 0;

    public static GameController GetInstance()
    {
        if (instance == null)
        {
            instance = GameObject.FindGameObjectWithTag("GameController").GetComponent<GameController>();
        }
        return instance;
    }


    static private GameController instance; 

    static public readonly string CheckerTag = "Checker";

    static public readonly string FieldTag = "Field";

    static public readonly string Player1Name = "Player1";

    static public readonly string Player2Name = "Player2";
    public Player CurrentPlayer
    {
        get
        {
            return Players[CurrentPlayerIdx];
        }
    }
   

    public void Start()
    { //find objects and give them direction
        Players[0] = GameObject.Find(Player1Name).GetComponent<Player>();
        Players[0].Direction = 1;

        Players[1] = GameObject.Find(Player2Name).GetComponent<Player>();
        Players[1].Direction = -1;

        for (int y = 3; y < GameModel.GetInstance().BoardSize; y++)
        {
            for (int x = 0; x < GameModel.GetInstance().BoardSize; x++)
            {
                if ((x % 2 == 0 && y % 2 == 0) || (x % 2 == 1 && y % 2 == 1))
                {
                    if (y - 3< GameModel.GetInstance().NumCheckerRows)
                    {
                        GameModel.GetInstance().Board[x, y].Owner = Players[0];
                    }
                    else if (y >= GameModel.GetInstance().BoardSize - GameModel.GetInstance().NumCheckerRows)
                    {
                        GameModel.GetInstance().Board[x, y].Owner = Players[1];
                    }
                }
            }
        }
        GameModel.GetInstance().UpdatePossibleMoves();
    }
       void Update() {
        if (CurrentPlayer)
        {

            CurrentPlayer.ProcessTurn();
        }
    }
    public void NextTurn()
    {
        CurrentPlayerIdx = 1 - CurrentPlayerIdx;
        GameModel.GetInstance().UpdatePossibleMoves();

        int winner = GameModel.GetInstance().CheckVictory();

        if(winner!=-1)//-1 being null
        {
            GameView.GetInstance().GameEndUI.SetActive(true);
            GameView.GetInstance().GameEndUI.GetComponent<GameEndView>().SetWinnerText(winner);
        }
    }
}
	
